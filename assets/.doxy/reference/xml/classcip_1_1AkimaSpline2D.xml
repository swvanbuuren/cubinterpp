<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcip_1_1AkimaSpline2D" kind="class" language="C++" prot="public">
    <compoundname>cip::AkimaSpline2D</compoundname>
    <basecompoundref refid="classcip_1_1CubicInterpND" prot="public" virt="non-virtual">cip::CubicInterpND&lt; T, 2 &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>N</declname>
        <defname>N</defname>
        <defval>2</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classcip_1_1AkimaSpline2D_1ad8bdf86b265282882d2aa15ce387fcf0" prot="private" static="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>using cip::AkimaSpline2D&lt; T, N &gt;::Vector =  std::vector&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Vector</name>
        <qualifiedname>cip::AkimaSpline2D::Vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="34" column="5" bodyfile="include/cubic_splines_2d.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcip_1_1AkimaSpline2D_1a5344ab05d1c39481c31451b7040ac189" prot="private" static="no">
        <type>std::mdspan&lt; T, std::dextents&lt; std::size_t, 1 &gt;, std::layout_stride &gt;</type>
        <definition>using cip::AkimaSpline2D&lt; T, N &gt;::Mdspan1D =  std::mdspan&lt;T, std::dextents&lt;std::size_t, 1&gt;, std::layout_stride&gt;</definition>
        <argsstring></argsstring>
        <name>Mdspan1D</name>
        <qualifiedname>cip::AkimaSpline2D::Mdspan1D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="35" column="5" bodyfile="include/cubic_splines_2d.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcip_1_1AkimaSpline2D_1a577df0ba7162dde22739f6e635fea398" prot="private" static="no">
        <type><ref refid="classcip_1_1VectorN" kindref="compound">cip::VectorN</ref>&lt; T, N &gt;</type>
        <definition>using cip::AkimaSpline2D&lt; T, N &gt;::VectorN =  cip::VectorN&lt;T, N&gt;</definition>
        <argsstring></argsstring>
        <name>VectorN</name>
        <qualifiedname>cip::AkimaSpline2D::VectorN</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="36" column="5" bodyfile="include/cubic_splines_2d.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcip_1_1AkimaSpline2D_1aca4bc6ada9f4173dbd451c2770746140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cip::AkimaSpline2D&lt; T, N &gt;::AkimaSpline2D</definition>
        <argsstring>(const Vector &amp;_x, const Vector &amp;_y, const VectorN &amp;_f)</argsstring>
        <name>AkimaSpline2D</name>
        <qualifiedname>cip::AkimaSpline2D::AkimaSpline2D</qualifiedname>
        <param>
          <type>const Vector &amp;</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>const Vector &amp;</type>
          <declname>_y</declname>
        </param>
        <param>
          <type>const <ref refid="classcip_1_1VectorN" kindref="compound">VectorN</ref> &amp;</type>
          <declname>_f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="38" column="5" bodyfile="include/cubic_splines_2d.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcip_1_1AkimaSpline2D_1aa2fec650a4a2d591ba8226d676e2e1b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cip::AkimaSpline2D&lt; T, N &gt;::~AkimaSpline2D</definition>
        <argsstring>()</argsstring>
        <name>~AkimaSpline2D</name>
        <qualifiedname>cip::AkimaSpline2D::~AkimaSpline2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="43" column="5" bodyfile="include/cubic_splines_2d.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classcip_1_1AkimaSpline2D_1a2af76b13857b1076c2c509f7cc262bca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Vector</type>
        <definition>Vector cip::AkimaSpline2D&lt; T, N &gt;::calc_slopes</definition>
        <argsstring>(const Vector &amp;x, const Mdspan1D &amp;f) const override</argsstring>
        <name>calc_slopes</name>
        <qualifiedname>cip::AkimaSpline2D::calc_slopes</qualifiedname>
        <reimplements refid="classcip_1_1CubicInterpND_1a47b5250258f9017a46c87e514adabc49">calc_slopes</reimplements>
        <param>
          <type>const Vector &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Mdspan1D &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/cubic_splines_2d.hpp" line="45" column="12" bodyfile="include/cubic_splines_2d.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>cip::AkimaSpline2D&lt; T, N &gt;</label>
        <link refid="classcip_1_1AkimaSpline2D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cip::CubicInterpND&lt; T, N &gt;</label>
        <link refid="classcip_1_1CubicInterpND"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>cip::AkimaSpline2D&lt; T, N &gt;</label>
        <link refid="classcip_1_1AkimaSpline2D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>cip::CubicInterpND&lt; T, N &gt;</label>
        <link refid="classcip_1_1CubicInterpND"/>
      </node>
    </collaborationgraph>
    <location file="include/cubic_splines_2d.hpp" line="32" column="1" bodyfile="include/cubic_splines_2d.hpp" bodystart="33" bodyend="49"/>
    <listofallmembers>
      <member refid="classcip_1_1AkimaSpline2D_1aca4bc6ada9f4173dbd451c2770746140" prot="public" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>AkimaSpline2D</name></member>
      <member refid="classcip_1_1CubicInterpND_1a2b0e06adc067b0963d135b28eec07d48" prot="public" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>build</name></member>
      <member refid="classcip_1_1AkimaSpline2D_1a2af76b13857b1076c2c509f7cc262bca" prot="public" virt="virtual"><scope>cip::AkimaSpline2D</scope><name>calc_slopes</name></member>
      <member refid="classcip_1_1CubicInterpND_1aeb5f2abc0f88d50cc7b24b9914155a2c" prot="public" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>CubicInterpND</name></member>
      <member refid="classcip_1_1CubicInterpND_1a9a51aed8b81047f30acfe0882ab3a567" prot="public" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>eval</name></member>
      <member refid="classcip_1_1AkimaSpline2D_1a5344ab05d1c39481c31451b7040ac189" prot="private" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>Mdspan1D</name></member>
      <member refid="classcip_1_1AkimaSpline2D_1ad8bdf86b265282882d2aa15ce387fcf0" prot="private" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>Vector</name></member>
      <member refid="classcip_1_1AkimaSpline2D_1a577df0ba7162dde22739f6e635fea398" prot="private" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>VectorN</name></member>
      <member refid="classcip_1_1AkimaSpline2D_1aa2fec650a4a2d591ba8226d676e2e1b8" prot="public" virt="non-virtual"><scope>cip::AkimaSpline2D</scope><name>~AkimaSpline2D</name></member>
      <member refid="classcip_1_1CubicInterpND_1ad90a6fd798c16790051618edeac81612" prot="public" virt="virtual"><scope>cip::AkimaSpline2D</scope><name>~CubicInterpND</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
